
(proclaim '(optimize debug))
(ql:quickload :shovel)

Silly Common Lisp SLOC count :-)

find . -iname '*.lisp' | xargs egrep "^[\ ]*[^\t ;]" | wc -l

(defun pos-to-list (pos)
  (list (shovel-types:pos-line pos)
        (shovel-types:pos-column pos)))

(defun instruction-to-list (instruction)
  (let (result)
    (push (shovel-types:instruction-opcode instruction) result)
    (alexandria:if-let (args (shovel-types:instruction-arguments instruction))
      (push args result))
    ;; (alexandria:if-let (start-pos (shovel-types:instruction-start-pos instruction))
    ;;   (push (pos-to-list start-pos) result))
    ;; (alexandria:if-let (end-pos (shovel-types:instruction-end-pos instruction))
    ;;   (push (pos-to-list end-pos) result))
    ;; (alexandria:if-let (comments (shovel-types:instruction-comments instruction))
    ;;   (push (cons "c" comments) result))
    (nreverse result)))

(defun code-to-json (source)
  (let ((*print-circle* t))
    (length (shovel-compiler:assemble-instructions
             (shovel-compiler:compile-string-to-instructions source)))
    ;; (mpk:encode
    ;;  (mapcar #'instruction-to-list
    ;;          (coerce (shovel-compiler:assemble-instructions
    ;;                   (shovel-compiler:compile-string-to-instructions source))
    ;;                  'list)))
    ))
    

